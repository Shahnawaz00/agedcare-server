// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  member_id            Int           @id @default(autoincrement())
  name                 String
  date_of_birth        DateTime
  gender               String
  emergency_contact    String
  next_of_kin          String
  mailing_address      String
  allergies_or_diet    String
  current_medications  String
  general_practitioner String
  appointments         Appointment[]
}

model Staff {
  staff_id            Int           @id @default(autoincrement())
  name                String
  contact_information String
  qualifications      String
  role                String
  availability        String
  appointments        Appointment[]
  Schedule            Schedule[]
}

model Service {
  service_id   Int           @id @default(autoincrement())
  service_type String
  duration     String
  description  String
  appointments Appointment[]
}

model Facility {
  facility_id        Int           @id @default(autoincrement())
  room_number        String
  occupancy_status   String
  reservation_length String
  date_reserved      DateTime
  appointments       Appointment[]
}

model Appointment {
  appointment_id   Int      @id @default(autoincrement())
  member_id        Int
  staff_id         Int
  service_id       Int
  facility_id      Int
  appointment_date DateTime
  appointment_time String
  notes            String

  member   Member   @relation(fields: [member_id], references: [member_id])
  staff    Staff    @relation(fields: [staff_id], references: [staff_id])
  service  Service  @relation(fields: [service_id], references: [service_id])
  facility Facility @relation(fields: [facility_id], references: [facility_id])
}

model Medication {
  medication_id    Int        @id @default(autoincrement())
  medication_name  String
  dosage_form      String
  quantity_on_hand Int
  expiration_date  DateTime
  inventory        Inventory? @relation("MedicationToInventory", fields: [medication_id], references: [inventory_id])
}

model Inventory {
  inventory_id   Int         @id @default(autoincrement())
  medication_id  Int
  quantity       Int
  last_restocked DateTime
  medication     Medication? @relation("MedicationToInventory")
}

model Schedule {
  schedule_id      Int      @id @default(autoincrement())
  staff_id         Int
  date             DateTime
  shift_start_time String
  shift_end_time   String

  staff Staff @relation(fields: [staff_id], references: [staff_id])
}
